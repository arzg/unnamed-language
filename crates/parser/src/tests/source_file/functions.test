fnc average_two(x: s32, y: s32): s32 -> {x + y} / 2;
fnc average_three(x: s32, y: s32, z: s32): s32 -> {x + y + z} / 3;
===
Root@0..119
  Function@0..52
    FncKw@0..3 "fnc"
    Whitespace@3..4 " "
    Ident@4..15 "average_two"
    ParamList@15..31
      LParen@15..16 "("
      Param@16..22
        Ident@16..17 "x"
        Colon@17..18 ":"
        Whitespace@18..19 " "
        Ty@19..22
          Ident@19..22 "s32"
      Comma@22..23 ","
      Whitespace@23..24 " "
      Param@24..30
        Ident@24..25 "y"
        Colon@25..26 ":"
        Whitespace@26..27 " "
        Ty@27..30
          Ident@27..30 "s32"
      RParen@30..31 ")"
    ReturnTy@31..36
      Colon@31..32 ":"
      Whitespace@32..33 " "
      Ty@33..36
        Ident@33..36 "s32"
    Whitespace@36..37 " "
    Arrow@37..39 "->"
    Whitespace@39..40 " "
    BinExpr@40..51
      Block@40..47
        LBrace@40..41 "{"
        BinExpr@41..46
          Call@41..42
            Ident@41..42 "x"
          Whitespace@42..43 " "
          Plus@43..44 "+"
          Whitespace@44..45 " "
          Call@45..46
            Ident@45..46 "y"
        RBrace@46..47 "}"
      Whitespace@47..48 " "
      Slash@48..49 "/"
      Whitespace@49..50 " "
      IntLiteral@50..51
        Int@50..51 "2"
    Semicolon@51..52 ";"
  Whitespace@52..53 "\n"
  Function@53..119
    FncKw@53..56 "fnc"
    Whitespace@56..57 " "
    Ident@57..70 "average_three"
    ParamList@70..94
      LParen@70..71 "("
      Param@71..77
        Ident@71..72 "x"
        Colon@72..73 ":"
        Whitespace@73..74 " "
        Ty@74..77
          Ident@74..77 "s32"
      Comma@77..78 ","
      Whitespace@78..79 " "
      Param@79..85
        Ident@79..80 "y"
        Colon@80..81 ":"
        Whitespace@81..82 " "
        Ty@82..85
          Ident@82..85 "s32"
      Comma@85..86 ","
      Whitespace@86..87 " "
      Param@87..93
        Ident@87..88 "z"
        Colon@88..89 ":"
        Whitespace@89..90 " "
        Ty@90..93
          Ident@90..93 "s32"
      RParen@93..94 ")"
    ReturnTy@94..99
      Colon@94..95 ":"
      Whitespace@95..96 " "
      Ty@96..99
        Ident@96..99 "s32"
    Whitespace@99..100 " "
    Arrow@100..102 "->"
    Whitespace@102..103 " "
    BinExpr@103..118
      Block@103..114
        LBrace@103..104 "{"
        BinExpr@104..113
          BinExpr@104..109
            Call@104..105
              Ident@104..105 "x"
            Whitespace@105..106 " "
            Plus@106..107 "+"
            Whitespace@107..108 " "
            Call@108..109
              Ident@108..109 "y"
          Whitespace@109..110 " "
          Plus@110..111 "+"
          Whitespace@111..112 " "
          Call@112..113
            Ident@112..113 "z"
        RBrace@113..114 "}"
      Whitespace@114..115 " "
      Slash@115..116 "/"
      Whitespace@116..117 " "
      IntLiteral@117..118
        Int@117..118 "3"
    Semicolon@118..119 ";"
