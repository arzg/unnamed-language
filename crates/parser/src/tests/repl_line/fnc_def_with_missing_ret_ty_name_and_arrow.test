fnc gen(): {
  let foo = 5;
  foo
};
===
Root@0..36
  FncDef@0..36
    FncKw@0..3 "fnc"
    Whitespace@3..4 " "
    Ident@4..7 "gen"
    ParamList@7..9
      LParen@7..8 "("
      RParen@8..9 ")"
    RetTy@9..11
      Colon@9..10 ":"
      Whitespace@10..11 " "
      Ty@11..11
    Block@11..35
      LBrace@11..12 "{"
      Whitespace@12..15 "\n  "
      LocalDef@15..27
        LetKw@15..18 "let"
        Whitespace@18..19 " "
        Ident@19..22 "foo"
        Whitespace@22..23 " "
        Eq@23..24 "="
        Whitespace@24..25 " "
        IntLiteral@25..26
          Int@25..26 "5"
        Semicolon@26..27 ";"
      Whitespace@27..30 "\n  "
      FncCall@30..33
        Ident@30..33 "foo"
      Whitespace@33..34 "\n"
      RBrace@34..35 "}"
    Semicolon@35..36 ";"
error at 10: missing return type
error at 10: missing Arrow
